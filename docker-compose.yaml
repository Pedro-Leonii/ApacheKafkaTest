networks:
  global:
    driver: bridge

x-broker-common-env: &common-env
  KAFKA_PROCESS_ROLES: broker,controller
  KAFKA_CONTROLLER_QUORUM_VOTERS: 1@broker1:9093,2@broker2:9093,3@broker3:9093
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  CLUSTER_ID: 8cQAdE44QTWV_0HLozHOOQ 
  KAFKA_LOG_DIRS: /tmp/kafka/data

services:
  broker1:
    image: apache/kafka:latest
    hostname: broker1
    container_name: broker1
    healthcheck:
      interval: 1s
      timeout: 10s
      retries: 20
      test: /opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server broker1:9092 || exit 1
    environment:
      <<: *common-env 
      KAFKA_NODE_ID: 1
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://broker1:9092,CONTROLLER://broker1:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092
    volumes:
      - ./broker1/data:/tmp/kafka/data
    networks:
      - global

  broker2:
    image: apache/kafka:latest
    hostname: broker2
    container_name: broker2
    healthcheck:
      interval: 1s
      timeout: 10s
      retries: 20
      test: /opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server broker2:9092 || exit 1
    environment:
      <<: *common-env
      KAFKA_NODE_ID: 2
      KAFKA_BROKER_ID: 2
      KAFKA_LISTENERS: PLAINTEXT://broker2:9092,CONTROLLER://broker2:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092
    volumes:
      - ./broker2/data:/tmp/kafka/data
    networks:
      - global

  broker3:
    image: apache/kafka:latest
    hostname: broker3
    container_name: broker3
    healthcheck:
      interval: 1s
      timeout: 10s
      retries: 20
      test: /opt/kafka/bin/kafka-cluster.sh cluster-id --bootstrap-server broker3:9092 || exit 1
    environment:
      <<: *common-env
      KAFKA_NODE_ID: 3
      KAFKA_BROKER_ID: 3
      KAFKA_LISTENERS: PLAINTEXT://broker3:9092,CONTROLLER://broker3:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9092
    volumes:
      - ./broker3/data:/tmp/kafka/data
    networks:
      - global
 
  topic-creator:
    build: ./docker/topic_creator
    image: topic-creator
    container_name: topic-creator
    hostname: topiccreator
    depends_on:
      broker1:
        condition: service_healthy
      broker2:
        condition: service_healthy  
      broker3:
        condition: service_healthy
    networks:
      - global
    volumes:
      - ./topics-creation.sh:/topics-creation.sh
    entrypoint:
      ["sh", "topics-creation.sh"]
    networks:
      - cluster-net
    
  producer:
    build: ./producer_service/
    stdin_open: true
    tty: true 
    environment:
      BOOTSTRAP_SERVERS: "broker1:9092,broker2:9092,broker3:9092"
      ACKS: "all"
    networks:
      - cluster-net

  s3-proxy:


