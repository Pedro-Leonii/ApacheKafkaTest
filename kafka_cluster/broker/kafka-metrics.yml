rules:
  - pattern: kafka.server<type=BrokerTopicMetrics, name=MessagesInPerSec, topic=(.+)><>Count
    name: kafka_total_msgs_in
    type: COUNTER
    labels:
      topic: "$1"
    
  - pattern: kafka.server<type=BrokerTopicMetrics, name=MessagesInPerSec, topic=(.+)><>MeanRate
    name: kafka_mean_msgs_in_per_s
    type: GAUGE
    labels:
      topic: "$1"

  - pattern: kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec, topic=(.+)><>Count
    name: kafka_total_bytes_in
    type: COUNTER
    labels:
      topic: "$1"

  - pattern: kafka.server<type=BrokerTopicMetrics, name=BytesInPerSec, topic=(.+)><>MeanRate
    name: kafka_mean_bytes_in_per_s
    type: GAUGE
    labels:
      topic: "$1"
  
  - pattern: kafka.server<type=BrokerTopicMetrics, name=FailedProduceRequestsPerSec, topic=(.+)><>Count
    name: kafka_total_failed_produce
    type: COUNTER
    labels:
      topic: "$1"

  - pattern: kafka.server<type=BrokerTopicMetrics, name=ReplicationBytesInPerSec, topic=(.+)><>Count
    name: kafka_total_replication_bytes_in
    type: COUNTER
    labels:
      topic: "$1"

  - pattern: kafka.server<type=BrokerTopicMetrics, name=ReplicationBytesOutPerSec, topic=(.+)><>Count
    name: kafka_total_replication_bytes_out
    type: COUNTER
    labels:
      topic: "$1"

  - pattern: kafka.server<ttype=DelayedOperationPurgatory, name=PurgatorySize, delayedOperation=Produce><>Value
    name: kafka_produce_purgatory_size
    type: GAUGE

  - pattern: kafka.server<type=KafkaServer, name=linux-disk-read-bytes><>Value
    name: kafka_bytes_disk_read
    type: GAUGE

  - pattern: kafka.server<type=KafkaServer, name=linux-disk-write-bytes><>Value
    name: kafka_bytes_disk_write
    type: GAUGE

  - pattern: kafka.server<type=socket-server-metrics, listener=(.+), networkProcessor=.+><>connection-count
    name: kafka_open_connections
    type: GAUGE
    labels:
      listener: "$1"
